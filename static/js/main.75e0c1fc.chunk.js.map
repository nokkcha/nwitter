{"version":3,"sources":["fbBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigations.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","onSubmit","event","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewnweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createAt","Date","now","createrId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","setNweets","onSnapshot","snapshot","nweetArray","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","currentUser","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e0c1fc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService, dbService } from \"fbBase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  //db데이터 필터링\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"createrId\", \"==\", userObj.uid)\n      .orderBy(\"createrAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import { authService } from \"fbBase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        //log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"fbBase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  // onSocialClick 함수 : 소셜 로그인 처리 시키는 함수 (async 비동기 함수)\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n\n//이렇게 해두면 자동으로 import 된다.\n","import { dbService, storageService } from \"fbBase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  //editing, setediting 은 현재 업데이트 상태인지 아닌지 알려줌\n  const [editing, setEditing] = useState(false);\n  //inputdp dlqfurehls text를 업데이트\n  const [newNweet, setNewnweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure t o delete this nweet?\");\n    if (ok) {\n      //delete\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      //reference에서 URL을 얻는 방법\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewnweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  onChange={onChange}\n                  value={newNweet}\n                  placeholder=\"What?!\"\n                  autoFocus\n                  required\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {/* nweetObj안에 attachmentUrl 이 있다. */}\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <>\n              <div className=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { dbService, storageService } from \"fbBase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createAt: Date.now(),\n      createrId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  //from event , 즉, 이벤트 안에 있는 target안에 있는 value를 달라고 하는 것\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  //file\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService, storageService } from \"fbBase\";\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.createrId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Profile from \"routes/Profile\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigations\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\n//Fragment 많은 요소들을 렌더링 하고 싶을 때 사용한다.\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    //관찰자\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing.....\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter </footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}